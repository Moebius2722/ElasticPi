input {
        tcp {
                port => 5000
                type => syslog
                tags => ["syslog"]
        }
        tcp {
                port => 5001
                type => squid
                tags => ["squid"]
        }
        beats {
                port => 5002
                type => beat
                tags => ["beat"]
        }
}

filter {
        if [type] == "syslog" {
                syslog_pri { }
        }
        if "squid" in [tags] {
                grok {
                        match => [ "message", "%{NUMBER:[@metadata][timestamp]}%{SPACE}%{INT:duration}%{SPACE}%{IP:src_ip}%{SPACE}%{WORD:req_status}/%{INT:http_code}%{SPACE}%{INT:bytes}%{SPACE}%{WORD:req_method}%{SPACE}(?<url>%{URI}|%{URIHOST})%{SPACE}%{DATA:user}%{SPACE}%{WORD:hr_status}/(?<dest_ip>%{IP}|-)%{SPACE}(?<mime_type>%{WORD}/%{WORD}|-)%{SPACE}" ]
                        named_captures_only => false
                        add_field => { "dest_host" => "%{URIHOST}" }
                        remove_field => [ "message" , "BASE10NUM" , "SPACE" , "IPV4" , "URI" , "URIPROTO" , "URIHOST" , "IP", "IPORHOST" , "HOSTNAME" , "URIPATHPARAM" , "URIPARAM" , "URIPATH" , "WORD" ]
                }
                mutate {
                        convert => { "bytes" => "integer" }
                        convert => { "duration" => "integer" }
                }
                date {
                        match => [ "[@metadata][timestamp]", "UNIX" ]
                }
                if [dest_ip] {
                        geoip {
                                source => "dest_ip"
                        }
                }
        }
        if [sysloghost] {
                mutate {
                        replace => [ "host", "%{sysloghost}" ]
                        remove_field => "sysloghost"
                }
        }
}

output {
        if "_grokparsefailure" in [tags] {
                elasticsearch {
                        hosts => ["https://[IP_ADDRESS]:9202"]
                        ssl => true
                        ssl_certificate_verification => false
                        user => "[USER]"
                        password => "[PASSWORD]"
                        index => "grokparsefailure-%{+YYYY.MM.dd}"
                }
        }
        if "syslog" in [tags] {
                elasticsearch {
                        hosts => ["https://[IP_ADDRESS]:9202"]
                        ssl => true
                        ssl_certificate_verification => false
                        user => "[USER]"
                        password => "[PASSWORD]"
                        index => "syslog-%{+YYYY.MM.dd}"
                }
        }
        if "squid" in [tags] {
                elasticsearch {
                        hosts => ["https://[IP_ADDRESS]:9202"]
                        ssl => true
                        ssl_certificate_verification => false
                        user => "[USER]"
                        password => "[PASSWORD]"
                        index => "squid-%{+YYYY.MM.dd}"
                }
        }
        if "beat" in [tags] {
                elasticsearch {
                        hosts => ["https://[IP_ADDRESS]:9202"]
                        ssl => true
                        ssl_certificate_verification => false
                        user => "[USER]"
                        password => "[PASSWORD]"
                        index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
                        document_type => "%{[@metadata][type]}"
                }
        }
        stdout {
                codec => rubydebug
        }
}
